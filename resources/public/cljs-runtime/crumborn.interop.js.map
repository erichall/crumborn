{"version":3,"sources":["crumborn/interop.cljs"],"mappings":";;AAEA,AAAA,AAAA,AAAAA,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AACFE,AAAIC,AAAWC;AADnB,AAEG,AAAmBF,AAAIC,AAAWC;;;AAFrC,AAAA,AAAA,AAAMJ,AAGFG,AAAWC;AAHf,AAIG,AAAmBC,AAAUF,AAAWC;;;AAJ3C,AAAA,AAAA,AAAMJ;;AAAN,AAMA,AAAA,AAAMM;AAAN,AAAoBC;;AACpB,AAAA,AAAMC;AAAN,AAAmBC;;AAEnB,AAAA,AAAMC,AACHC;AADH,AAEE,AAACC,AAA2BD;;AAE9B,AAAA,AAAME;AAAN,AAAA,AAAA,AAAA,AAEW,AAACP,AACD,AAACE;;AAEZ,AAAA,AAAA,AAAAV,AAAMiB;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA;;;;AAAA,AAAA,AAAAd,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMc,AACFC;AADJ,AACe,AAAA,AAAA,AAAA,AAAMA;;;AADrB,AAAA,AAAA,AAAMD;AAAN,AAEM,AAAA,AAAYE;;;AAFlB,AAAA,AAAA,AAAMF;;AAAN,AAIA,AAAA,AAAMG;AAAN,AAEEb;;AAEF,AAAA,AAAMc,AACHC,AAAIC;AADP,AAEE,AAAMC,AAAuBF,AAAIC;;AAEnC,AAAA,AAAME,AACHC;AADH,AAEE,AAAM,AAAQC,AAAoBD;;AAEpC,AAAA,AAAME,AACHC;AADH,AAEE,AAAMC,AAAK,AAACC,AAAQ,AAAwBF;AAA5C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACW,AAAUC,AACV,AAAUA,AACV,AAAQA,AACR,AAASA,AACT,AAAOA,AACP,AAASA,AACT,AAAKA,AACL,AAAKA;;AAElB,AAAA,AAAME,AAASC;AAAf,AAAoB,AAAWA;;AAC/B,AAAA,AAAMC,AAASD;AAAf,AAAoB,AAAWA;;AAC/B,AAAA,AAAME,AAAUF;AAAhB,AAAqB,AAAQ,AAAQA;;AACrC,AAAA,AAAMG,AAAaC;AAAnB,AAAyB,AAAcA;;AACvC,AAAA,AAAMC,AAAcT;AAApB,AAAwB,AAAcA;;AACtC,AAAA,AAAMU,AAAkBC;AAAxB,AACE,AAAMC,AAAM,AAACC,AAAU,AAAiBF;AAAxC,AACE,AAACG,AAAI,AAAKC;AAAL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEW,AAAUA,AACV,AAAUA,AACV,AAAQA,AACR,AAASA,AACT,AAAOA,AACP,AAASA,AACT,AAAKA,AACL,AAAKA;AAAKH;;AAC9B,AAAKI,AAASC;AACd,AAAA,AAAMC,AAAsBP,AAAMH;AAAlC,AAAwC,AAAA,AAACW,AAAUR,AAA2BH;;AAC9E,AAAA,AAAMY,AAAYpB;AAAlB,AAAsB,AAAaA;;AACnC,AAAA,AAAMqB,AAASC;AAAf,AAAkB,AAACC,AAASD;;AAC5B,AAAA,AAAME,AAAUF;AAAhB,AAAmB,AAACG,AAAI,AAACJ,AAAQC;;AACjC,AAAA,AAAMI,AAAkB1B,AAAG2B;AAA3B,AAA8B,AAAA,AAACR,AAAUnB,AAAsB2B","names":["var_args","G__38622","crumborn.interop/setup-listener!","js/Error","obj","event-type","callback","js/window","crumborn.interop/get-height","js/window.innerHeight","crumborn.interop/get-width","js/window.innerWidth","crumborn.interop/get-element-by-id","id","js/document.getElementById","crumborn.interop/get-window-size","G__38639","crumborn.interop/get-hash","event","js/window.location.hash","crumborn.interop/get-window","crumborn.interop/set-body-style!","key","value","js/document.body.style","crumborn.interop/set-hash!","loc","js/window.location","crumborn.interop/get-bounding-client-rect","el","rect","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","crumborn.interop/mouse-x","evt","crumborn.interop/mouse-y","crumborn.interop/get-type","crumborn.interop/first-child","node","crumborn.interop/create-range","crumborn.interop/get-client-rects","range","rects","cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1","cljs.core.map.cljs$core$IFn$_invoke$arity$2","r","crumborn.interop/document","js/document","crumborn.interop/select-node-contents","cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic","crumborn.interop/inner-html","crumborn.interop/is-nan?","x","js/isNaN","crumborn.interop/not-nan?","cljs.core/not","crumborn.interop/querySelectorAll","q"],"sourcesContent":["(ns crumborn.interop)\n\n(defn setup-listener!\n  ([obj event-type callback]\n   (.addEventListener obj event-type callback))\n  ([event-type callback]\n   (.addEventListener js/window event-type callback)))\n\n(defn get-height [] js/window.innerHeight)\n(defn get-width [] js/window.innerWidth)\n\n(defn get-element-by-id\n  [id]\n  (js/document.getElementById id))\n\n(defn get-window-size\n  []\n  {:height (get-height)\n   :width  (get-width)})\n\n(defn get-hash\n  ([event] (-> (aget event \"target\" \"location\" \"hash\")))\n  ([] (.substring js/window.location.hash 1)))\n\n(defn get-window\n  []\n  js/window)\n\n(defn set-body-style!\n  [key value]\n  (aset js/document.body.style key value))\n\n(defn set-hash!\n  [loc]\n  (set! (.-hash js/window.location) loc))\n\n(defn get-bounding-client-rect\n  [el]\n  (let [rect (js->clj (.getBoundingClientRect el))]\n    {:bottom (.-bottom rect)\n     :height (.-height rect)\n     :left   (.-left rect)\n     :right  (.-right rect)\n     :top    (.-top rect)\n     :width  (.-width rect)\n     :x      (.-x rect)\n     :y      (.-y rect)}))\n\n(defn mouse-x [evt] (.-clientX evt))\n(defn mouse-y [evt] (.-clientY evt))\n(defn get-type [evt] (.-name (.-type evt)))\n(defn first-child [node] (.-firstChild node))\n(defn create-range [el] (.createRange el))\n(defn get-client-rects [range]\n  (let [rects (array-seq (.getClientRects range))]\n    (map (fn [r]\n           {\n            :bottom (.-bottom r)\n            :height (.-height r)\n            :left   (.-left r)\n            :right  (.-right r)\n            :top    (.-top r)\n            :width  (.-width r)\n            :x      (.-x r)\n            :y      (.-y r)}) rects)))\n(def document js/document)\n(defn select-node-contents [range node] (js-invoke range \"selectNodeContents\" node))\n(defn inner-html [el] (.-innerHTML el))\n(defn is-nan? [x] (js/isNaN x))\n(defn not-nan? [x] (not (is-nan? x)))\n(defn querySelectorAll [el q] (js-invoke el \"querySelectorAll\" q))\n"]}